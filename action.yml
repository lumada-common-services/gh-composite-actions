name:  "ArgoCD deployment GitHub Action"
description: "ArgoCD deployment GitHub Action"
inputs:
  DEPLOYMENT_METHOD:
    description: "Deployment type either ArgoCD or helm or kubectl"
    required: true
  APP_DEFINITION_TEMPLATE_YAML:
    description: "Path to the template file where action file need to update the new Version of solution and app definitions"
    required: true
  APP_DEFINITION_YAML_ARGO:
    description: "Path to the folder where Argocd will monitor for change in the files"
    required: true
  APP_VERSION:
    description: "New version of solution and app definitions"
    required: true
  JFROG_USERNAME:
    description: "User name for https://hitachi.jfrog.io/"
    required: true
  JFROG_PASSWORD:
    description: "Password for https://hitachi.jfrog.io/"
    required: true

runs:
  using: "composite"
  steps:    
      - name: set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.11.1'
          # token: "nope-not-going-to-provide"
        
      - name: Deploy helm charts
        if: ${{ inputs.DEPLOYMENT_METHOD }} == "Helm"
        run: |
          echo "testing helm for version ${APP_VERSION}"

          # updating kubeconfig
          cat ${JARJAR_CLUSER_KUBECONFIG} > kubeconfig

          # add helm registry
          echo "Adding helm registry https://hitachi.jfrog.io/artifactory/api/helm/csaf-helm-dev as csaf-helm-dev"
          helm repo add csaf-helm-dev https://hitachi.jfrog.io/artifactory/api/helm/csaf-helm-dev --username ${JFROG_USERNAME} --password ${JFROG_PASSWORD}
          helm repo update
          
          echo "helm list"
          helm list
          
          echo "Adding helm registry https://hitachi.jfrog.io/artifactory/api/helm/csaf-helm-dev as csaf-helm-dev"
          helm repo add csaf-helm-dev https://hitachi.jfrog.io/artifactory/api/helm/csaf-helm-dev --username ${JFROG_USERNAME} --password ${JFROG_PASSWORD}
          helm repo update
          
          # helm install lumadasolution-definition csaf-helm-dev/hello-world-solutiondefinition --version ${APP_VERSION} --kubeconfig kubeconfig
          # helm install hello-world-definition csaf-helm-dev/hello-world-lumadaappdefinition --version ${APP_VERSION} --kubeconfig kubeconfig
          
        shell: bash
  
  
#     - name: Override appVersion, version and registry
#       if: ${{ inputs.DEPLOYMENT_METHOD }} == "ArgoCD"
#       run: |
#         sed 's/%VERSION%/${{ inputs.APP_VERSION }}/g' ${{ inputs.APP_DEFINITION_TEMPLATE_YAML }} > ${{ inputs.APP_DEFINITION_YAML_ARGO }}/deployment.yaml
#         echo "Deployment yaml file is updated with new version: ${{ inputs.APP_VERSION }}. Below is the file going to be deployed"
#         cat ${{ inputs.APP_DEFINITION_YAML_ARGO }}/deployment.yaml
#       shell: bash

#     - name: commiting deployment.yml file for ArgoCD to current branch
#       if: ${{ inputs.deployment_method }} == "ArgoCD"
#       uses: EndBug/add-and-commit@v9
#       with:
#         add: '.'
#         commit: --signoff
#         default_author: github_actions
#         author_email: hv.buildguy@hitachivantara.com
#         author_name: buildguy
#         cwd: '.'
#         message: "Publishing  deployment.yaml file"
